// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Models;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250409070434_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Admin", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("backend.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("backend.Models.Admin", b =>
                {
                    b.OwnsOne("backend.Models.Power", "Power", b1 =>
                        {
                            b1.Property<string>("AdminEmail")
                                .HasColumnType("character varying(255)");

                            b1.HasKey("AdminEmail");

                            b1.ToTable("Admins");

                            b1.WithOwner()
                                .HasForeignKey("AdminEmail");

                            b1.OwnsOne("backend.Models.PowerState", "Chats", b2 =>
                                {
                                    b2.Property<string>("PowerAdminEmail")
                                        .HasColumnType("character varying(255)");

                                    b2.Property<bool>("Edit")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("View")
                                        .HasColumnType("boolean");

                                    b2.HasKey("PowerAdminEmail");

                                    b2.ToTable("Admins");

                                    b2.WithOwner()
                                        .HasForeignKey("PowerAdminEmail");
                                });

                            b1.OwnsOne("backend.Models.PowerState", "Sales", b2 =>
                                {
                                    b2.Property<string>("PowerAdminEmail")
                                        .HasColumnType("character varying(255)");

                                    b2.Property<bool>("Edit")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("View")
                                        .HasColumnType("boolean");

                                    b2.HasKey("PowerAdminEmail");

                                    b2.ToTable("Admins");

                                    b2.WithOwner()
                                        .HasForeignKey("PowerAdminEmail");
                                });

                            b1.OwnsOne("backend.Models.PowerState", "Users", b2 =>
                                {
                                    b2.Property<string>("PowerAdminEmail")
                                        .HasColumnType("character varying(255)");

                                    b2.Property<bool>("Edit")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("View")
                                        .HasColumnType("boolean");

                                    b2.HasKey("PowerAdminEmail");

                                    b2.ToTable("Admins");

                                    b2.WithOwner()
                                        .HasForeignKey("PowerAdminEmail");
                                });

                            b1.Navigation("Chats")
                                .IsRequired();

                            b1.Navigation("Sales")
                                .IsRequired();

                            b1.Navigation("Users")
                                .IsRequired();
                        });

                    b.Navigation("Power")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
